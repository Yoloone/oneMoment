{"version":3,"sources":["utils/url.js","utils/response.js","redux/middleware/api.js","redux/modules/entities/columns.js","redux/modules/showColumns.js","components/Header/index.js","containers/Column/index.js","components/ArticleList/index.js","redux/modules/entities/articles.js","redux/modules/showArticles.js","containers/Article/todayArticles.js","containers/Article/historyArticles.js","containers/Article/likeArticles.js","containers/Article/columnArticles.js","containers/Detail/articleDetail.js","containers/Detail/commentList.js","redux/modules/entities/comments.js","redux/modules/details.js","containers/Detail/index.js","containers/HotAuthor/AuthorList/index.js","redux/modules/entities/authors.js","redux/modules/hotAuthors.js","containers/HotAuthor/index.js","containers/AuthorProfile/authorInfo.js","containers/AuthorProfile/authorPosts.js","redux/modules/authorInfo.js","containers/AuthorProfile/index.js","redux/modules/login.js","containers/Login/loginForm.js","containers/Login/index.js","containers/PrivateRoute/index.js","containers/App/index.js","redux/modules/entities/index.js","redux/modules/index.js","redux/store.js","index.js"],"names":["url","date","concat","columnId","postId","authorId","headers","Headers","Accept","Content-Type","handleResponse","response","status","json","console","error","Promise","reject","message","fetchData","requestURL","schema","fetch","method","credentials","then","catch","err","data","normalizeData","_ref","id","name","kvObj","ids","Array","isArray","forEach","item","push","Object","defineProperty","reducer","state","arguments","length","undefined","action","objectSpread","actionTypes","actions","loadColumns","dispatch","getState","urls","fetchColumns","types","initialState","isFetching","columnIds","getAllColumns","showColumns","map","entities","columns","type","Header","visible","showDrawer","_this","setState","onClose","back","window","history","onChange","dateString","props","changeDate","_d","current","moment","endOf","_this$props","this","title","isLike","changeLikes","react_default","a","createElement","className","icon","onClick","date_picker","format","disabledDate","theme","drawer","placement","closable","avatar","size","shape","react_router_dom","to","twoToneColor","Component","Column","components_Header","key","src","description","connect","bindActionCreators","columnActions","ArticleList","loadArticles","loading","articles","dateStr","toDateString","list","header","dataSource","itemLayout","renderItem","Item","column","display_style","abstract","thumbs","medium","image","small","getDateParam","fetchArticles","loadColumnArticles","setColumnID","year","getFullYear","month","getMonth","day","getDate","articleIds","Date","getArticleList","showArticles","getColumnName","getLikeList","user","JSON","parse","localStorage","getItem","login","username","likeList","likeIds","TodayArticle","components_ArticleList","todayActions","HistoryArticle","setDate","LikeArticles","ColumnArticle","match","params","_this$props2","columnName","articleActions","ArticleDetail","loadArticleDetail","content","dangerouslySetInnerHTML","__html","CommentList","loadArticleComments","comments","Meta","author","href","created_time","split","changeIsLike","fetchArticleDetail","fetchArticleComments","isChange","setItem","stringify","commentIds","getArticleDetail","details","getArticleComments","getIsLike","Detail","_this$props$actions","articleDetail","commentList","detailActions","AuthorList","loadAuthors","authors","editor_notes","loadRecAuthors","fetchRecAuthors","loadHotAuthors","fetchHotAuthors","recIds","hotIds","getRecAuthors","hotAuthors","getHotAuthors","HotAuthor","recAuthors","HotAuthor_AuthorList","authorActions","AuthorInfo","large_avatar","alt","resume","AuthorPosts","loadAuthorPosts","posts","like_count","setAuthorID","authorInfo","fetchAuthorPosts","postIds","getAuthorPosts","getAuthorInfo","AuthorProfile","authorPosts","AuthorProfile_authorInfo","AuthorProfile_authorPosts","userSchema","password","resolve","setTimeout","logout","removeItem","isLogin","loginForm","handleSubmit","e","preventDefault","document","getElementById","value","onSubmit","es_form","style","textAlign","margin","input","prefix","color","placeholder","es_button","htmlType","width","backgroundColor","Login","location","from","react_router","Login_loginForm","loginActions","PrivateRoute","component","rest","objectWithoutProperties","assign","render","pathname","App","path","containers_PrivateRoute","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","next","requestEntity","Error","every","actionWith","_types","slicedToArray","requestAction","successAction","failureAction","ReactDOM","es","containers_App"],"mappings":"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","file":"static/js/main.ad4f04fd.chunk.js","sourcesContent":["export default {\r\n    getArticlesByDate: (date) => `/api/stream/date/${date}`,\r\n    getArticlesByColumn: (columnId) => `/api/column/${columnId}/posts?count=20`,    \r\n    getColumns: () => '/api/columns',\r\n    getRecAuthors: () => '/api/auth_authors/rec',\r\n    getHotAuthors: () => '/api/auth_authors/all?count=20',\r\n    getArticleDetail: postId => `/api/post/${postId}`,\r\n    getArticleComments: postId => `/api/post/${postId}/popular_comments`,\r\n    getAuthorPosts: authorId => `/api/author/${authorId}/posts`,\r\n}","//网络请求封装\r\n\r\nconst headers = new Headers({\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n});\r\n\r\nexport const get = url => {\r\n    return fetch(url, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        headers,\r\n    }).then(response => {\r\n        return handleResponse(url, response);\r\n    }).catch(err => {\r\n        console.error(err);\r\n        return Promise.reject({\r\n            error: {\r\n                message: `Request ${url} failed due to the ${err}`\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport const post = (url, data) => {\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers,\r\n        body: data\r\n    }).then(response => {\r\n        return handleResponse(url, response);\r\n    }).catch(err => {\r\n        return Promise.reject({\r\n            error: {\r\n                message: `Request ${url} failed due to the ${err}`\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nconst handleResponse = (url, response) => {\r\n    if (response.status === 200) {\r\n        return response.json();\r\n    } else {\r\n        console.error(`Request failed. Url = ${url}`)\r\n        return Promise.reject({\r\n            error: {\r\n                message: `Request ${url} failed due to the sever err`\r\n            }\r\n        });\r\n    }\r\n}","import { get } from '../../utils/response';\r\n// 请求数据action标识\r\nexport const FETCH_DATA = \"FETCH_DATA\";\r\n\r\n/**\r\n * 处理请求API的中间件\r\n * action = {\r\n    FETCH_DATA: {\r\n        types:[requestAction, successAction, failureAction]\r\n        requestURL,\r\n        schema, 领域数据表\r\n    }\r\n* }\r\n * @param {*} store \r\n */\r\nexport default store => next => action => {\r\n    const requestEntity = action[FETCH_DATA];\r\n    if (requestEntity === undefined) {\r\n        return next(action);\r\n    }\r\n\r\n    const { requestURL, types, schema } = requestEntity;\r\n    if (typeof requestURL !== 'string') {\r\n        return new Error('请求URL必须为string类型');\r\n    }\r\n\r\n    if (!Array.isArray(types) || types.length !== 3) {\r\n        return new Error('需指定包含3个action type的数组');\r\n    }\r\n\r\n    if (!types.every(item => typeof item === 'string')) {\r\n        return new Error('action type 必需为string类型');\r\n    }\r\n\r\n    if (!schema) {\r\n        return new Error('必需指定领域实体的schema');\r\n    }\r\n\r\n    //摘除FETCH_DATA，构造新的action\r\n    const actionWith = params => {\r\n        delete action[FETCH_DATA];\r\n        return { ...action, ...params };\r\n    }\r\n\r\n    //\r\n    const [requestAction, successAction, failureAction] = types;\r\n    next(actionWith({ type: requestAction }));\r\n    return fetchData(requestURL, schema).then(\r\n        data => {\r\n            next(actionWith({\r\n                type: successAction,\r\n                data\r\n            }));\r\n        },\r\n        error => {\r\n            next(actionWith({\r\n                type: failureAction,\r\n                error: error.message || '获取数据失败'\r\n            }));\r\n        }\r\n    )\r\n}\r\n\r\n// 请求数据\r\nconst fetchData = (requestURL, schema) => {\r\n    return get(requestURL).then(data => {\r\n        return normalizeData(data, schema);\r\n    });\r\n}\r\n\r\n// 根据schema 对获取的数据进行扁平化处理\r\nconst normalizeData = (data, schema) => {\r\n    // console.log(data);\r\n    const { id, name } = schema;\r\n    let kvObj = {};\r\n    let ids = [];\r\n    data = data[name];\r\n    if (Array.isArray(data)) {\r\n        data.forEach(item => {\r\n            kvObj[item[id]] = item;\r\n            ids.push(item[id]);\r\n        });\r\n    } else {\r\n       return data;\r\n    }\r\n    return {\r\n        [name]: kvObj,\r\n        ids\r\n    }\r\n}","export const schema = {\r\n    name: 'columns',\r\n    id: 'id'\r\n};\r\n\r\nconst reducer = (state = {}, action) => {\r\n    if (action.data && action.data[schema.name]) {\r\n        return { ...state, ...action.data[schema.name] };\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import urls from '../../utils/url';\r\nimport { FETCH_DATA } from '../middleware/api';\r\nimport { schema } from './entities/columns';\r\n\r\nconst actionTypes = {\r\n    FETCH_COLUMNS_REQUEST: 'FETCH_COLUMNS_REQUEST',\r\n    FETCH_COLUMNS_SUCCESS: 'FETCH_COLUMNS_SUCCESS',\r\n    FETCH_COLUMNS_FAILURE: 'FETCH_COLUMNS_FAILURE',\r\n}\r\n\r\nexport const actions = {\r\n    loadColumns : () => {\r\n        return (dispatch, getState) => {\r\n            const requestURL = urls.getColumns();\r\n            return dispatch(fetchColumns(requestURL));\r\n        }\r\n    },\r\n}\r\n\r\nconst fetchColumns = requestURL => ({\r\n    [FETCH_DATA]: {\r\n        requestURL,\r\n        schema,\r\n        types: [\r\n            actionTypes.FETCH_COLUMNS_REQUEST,\r\n            actionTypes.FETCH_COLUMNS_SUCCESS,\r\n            actionTypes.FETCH_COLUMNS_FAILURE,\r\n        ]\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    columnIds: [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_COLUMNS_REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case actionTypes.FETCH_COLUMNS_SUCCESS:\r\n            return { ...state, isFetching: false, columnIds: action.data.ids };\r\n        case actionTypes.FETCH_COLUMNS_FAILURE:\r\n            return { ...state, isFetching: false };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getAllColumns = (state) => {\r\n    return state.showColumns.columnIds.map(id => state.entities.columns[id]);\r\n}\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport { Icon, Drawer, Avatar, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nclass Header extends Component {\r\n    state = { visible: false };\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    back = () => {\r\n        window.history.back();\r\n    }\r\n\r\n    onChange = (date, dateString) => {\r\n        if (date) {\r\n            this.props.changeDate(date._d);\r\n        }\r\n    }\r\n    disabledDate(current) {\r\n        return current && current > moment().endOf('day');\r\n    }\r\n    render() {\r\n        const { title, type, isLike, changeLikes, changeDate } = this.props;\r\n        return (\r\n            <div className='header-panel'>\r\n                <div className='header-icon'>\r\n                    <Icon type={type} onClick=\r\n                        {type === 'menu' ?\r\n                            this.showDrawer :\r\n                            type === 'arrow-left' ?\r\n                                this.back : ''\r\n                        } />\r\n                </div>\r\n                <div className='header-title'>\r\n                    {changeDate ?\r\n                        <DatePicker\r\n                            format='YYYY-MM-DD'\r\n                            onChange={this.onChange}\r\n                            disabledDate={this.disabledDate} /> :\r\n                        title}\r\n                </div>\r\n                <div className='header-extra'>\r\n                    {changeLikes ?\r\n                        <Icon type='heart'\r\n                            theme={isLike ? 'filled' : 'outlined'}\r\n                            onClick={changeLikes} /> : ''}\r\n                </div>\r\n                <Drawer\r\n                    placement=\"left\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.visible}\r\n                >\r\n                    <div><Avatar size=\"large\" icon=\"user\" shape='circle' /> &nbsp; 登录</div>\r\n                    <ul className='drawer-list'>\r\n                        <li><Link to=\"/\"><Icon type=\"home\" theme=\"twoTone\" twoToneColor=\"#48c7ce\" />今日一刻</Link></li>\r\n                        <li><Link to=\"/historyArticles\"><Icon type=\"file\" theme=\"twoTone\" twoToneColor=\"#65c791\" />往期内容</Link></li>\r\n                        <li><Link to=\"/hotAuthors\"><Icon type=\"edit\" theme=\"twoTone\" twoToneColor=\"#ef9d56\" />热门作者</Link></li>\r\n                        <li><Link to=\"/column\"><Icon type=\"project\" theme=\"twoTone\" twoToneColor=\"#5295ce\" />栏目浏览</Link></li>\r\n                        <li><Link to=\"/like\"><Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#fb7677\" />我的喜欢</Link></li>\r\n                    </ul>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./style.css\";\r\nimport { getAllColumns, actions as columnActions } from '../../redux/modules/showColumns';\r\nimport Header from '../../components/Header';\r\n\r\nclass Column extends Component {\r\n    componentDidMount() {\r\n        const { actions: { loadColumns } } = this.props;\r\n        loadColumns();\r\n    }\r\n    render() {\r\n        const { columns } = this.props;\r\n        return (\r\n            <div>\r\n                <Header title=\"栏目浏览\" type=\"menu\" />\r\n                <div className=\"columns__container\">\r\n                    {\r\n                        columns.map(item => {\r\n                            return (<div className=\"columns__items\" key={item.id}>\r\n                                <img src={item.icon} />\r\n                                <h3><Link to={`/columnArticle/${item.id}`}>{item.name}</Link></h3>\r\n                                <h4>{item.description}</h4>\r\n                            </div>)\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    columns: getAllColumns(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(columnActions, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Column);","import React, { Component } from 'react';\r\nimport { List } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css'\r\n\r\nclass ArticleList extends Component {\r\n    componentDidMount() {\r\n        const { loadArticles } = this.props;\r\n        loadArticles();\r\n    }\r\n    render() {\r\n        //const articles = data.posts;\r\n        const { loading, articles, date } = this.props;\r\n        const dateStr = date ? date.toDateString() : ' ';\r\n        return (\r\n            <div>\r\n                <List\r\n                    loading={loading}\r\n                    header={dateStr}\r\n                    dataSource={articles}\r\n                    itemLayout='vertical'\r\n                    renderItem={item => (\r\n                        <List.Item key={item.id}>\r\n                            {\r\n                                item.column ? <span className=\"listItem-tag\">{item.column}</span> : ''\r\n                            }\r\n                            <h4 className=\"listItem-title\"><Link to={`/artileDetail/${item.id}`}>{item.title}</Link></h4>\r\n\r\n                            {\r\n                                item.display_style === 10001 ?\r\n                                    <div className=\"listItem-content\">\r\n                                        <div className=\"listItem-abstract\">{item.abstract}</div>\r\n                                    </div>\r\n                                    : ''\r\n                            }\r\n                            {\r\n                                item.display_style === 10002 ?\r\n                                    <div className=\"listItem-content\">\r\n                                        <div className=\"listItem-abstract\">{item.abstract}</div>\r\n                                        {item.thumbs.length > 0 ?\r\n                                            <div>\r\n                                                <img src={item.thumbs[0].medium.url} />\r\n                                            </div>\r\n                                            : ''}\r\n                                    </div>\r\n                                    : ''\r\n                            }\r\n\r\n                            {\r\n                                item.display_style === 10003 ?\r\n                                    <div className=\"listItem-content\">\r\n                                        {item.thumbs.map(image => {\r\n                                            if (image) {\r\n                                                return <div key={image.id}><img src={image.small.url} /></div>\r\n                                            } else {\r\n                                                return '';\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                    : ''\r\n                            }\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArticleList;","// 文章领域实体reducer\r\nexport const schema = {\r\n    name: 'posts',\r\n    id: 'id',\r\n}\r\n\r\nconst reducer = (state = {}, action) => {\r\n    if(action.data && action.data[schema.name]) {\r\n        return {...state, ...action.data[schema.name]};\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import urls from '../../utils/url';\r\nimport { FETCH_DATA } from '../middleware/api';\r\nimport { schema } from './entities/articles';\r\n\r\n//actions\r\nconst actionTypes = {\r\n    FETCH_ARTICLES_REQUEST: 'TODAY/FETCH_ARTICLES_REQUEST',\r\n    FETCH_ARTICLES_SUCCESS: 'TODAY/FETCH_ARTICLES_SUCCESS',\r\n    FETCH_ARTICLES_FAILURE: 'TODAY/FETCH_ARTICLES_FAILURE',\r\n    SET_COLUMNID: 'SET_COLUMNID',\r\n    SET_DATE: 'SET_DATE'\r\n}\r\n\r\nexport const actions = {\r\n    loadArticles: date => {\r\n        return (dispatch, getState) => {          \r\n            dispatch({ type: actionTypes.SET_DATE, date });\r\n            const requestURL = urls.getArticlesByDate(getDateParam(date));\r\n            return dispatch(fetchArticles(requestURL));\r\n        };\r\n    },\r\n    loadColumnArticles: columnId => {\r\n        return (dispatch, getState) => {\r\n            dispatch({ type: actionTypes.SET_COLUMNID, columnId })\r\n            const requestURL = urls.getArticlesByColumn(columnId);\r\n            return dispatch(fetchArticles(requestURL));\r\n        };\r\n    },\r\n    setColumnID: columnId => ({ type: actionTypes.SET_COLUMNID, columnId }),\r\n}\r\n\r\nconst fetchArticles = requestURL => ({\r\n    [FETCH_DATA]: {\r\n        requestURL,\r\n        types: [\r\n            actionTypes.FETCH_ARTICLES_REQUEST,\r\n            actionTypes.FETCH_ARTICLES_SUCCESS,\r\n            actionTypes.FETCH_ARTICLES_FAILURE\r\n        ],\r\n        schema\r\n    }\r\n});\r\n\r\nconst getDateParam = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const datePara = year + '-' +\r\n        (month > 9 ? month : '0' + month) + '-' +\r\n        (day > 9 ? day : '0' + day);\r\n    return datePara;\r\n}\r\n//reducers\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    articleIds: [],\r\n    columnId: '',\r\n    date: new Date(),\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_ARTICLES_REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case actionTypes.FETCH_ARTICLES_SUCCESS:\r\n            return { ...state, isFetching: false, articleIds: action.data.ids };\r\n        case actionTypes.FETCH_ARTICLES_FAILURE:\r\n            return { ...state, isFetching: false };\r\n        case actionTypes.SET_COLUMNID:\r\n            return { ...state, columnId: action.columnId };\r\n        case actionTypes.SET_DATE:\r\n            return { ...state, date: action.date };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//selecor\r\nexport const getArticleList = state => {\r\n    return state.showArticles.articleIds.map(id => state.entities.articles[id]);\r\n}\r\n\r\nexport const getDate = state => state.showArticles.date\r\n\r\nexport const isFetching = state => state.showArticles.isFetching\r\n\r\nexport const getColumnName = state => {\r\n    if (state.showArticles.columnId && state.entities.columns[state.showArticles.columnId]) {\r\n        return state.entities.columns[state.showArticles.columnId]['name'];\r\n    } else {\r\n        return '';\r\n    }\r\n\r\n}\r\nexport const getLikeList = state => {\r\n    const user = JSON.parse(localStorage.getItem(state.login.username));\r\n    const likeList = [];\r\n    if (user) {\r\n        for (let id in user.likeIds) {\r\n            likeList.push(state.entities.articles[id]);\r\n        }\r\n    }\r\n\r\n    return likeList;\r\n}\r\n\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ArticleList from '../../components/ArticleList';\r\nimport Header from '../../components/Header';\r\nimport { getArticleList, getDate, isFetching, actions as todayActions } from '../../redux/modules/showArticles';\r\n\r\nclass TodayArticle extends Component {\r\n    render() {\r\n        const { articles,isFetching, date, actions: { loadArticles } } = this.props;\r\n        // const date = new Date();\r\n        return (\r\n            <div>\r\n                <Header title=\"今日一刻\" type=\"menu\" />\r\n                <ArticleList\r\n                    loading={isFetching}\r\n                    articles={articles}\r\n                    loadArticles={() => loadArticles(new Date())}\r\n                    date={date} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    articles: getArticleList(state),\r\n    date: getDate(state),\r\n    isFetching: isFetching(state)\r\n});\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    actions: bindActionCreators(todayActions, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(TodayArticle);","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ArticleList from '../../components/ArticleList';\r\nimport Header from '../../components/Header';\r\nimport { getArticleList, getDate, isFetching, actions as todayActions } from '../../redux/modules/showArticles';\r\n\r\nclass HistoryArticle extends Component {\r\n    render() {\r\n        const { articles, isFetching, actions: { loadArticles } } = this.props;\r\n        const date = new Date();\r\n        date.setDate(date.getDate() - 1);\r\n        return (\r\n            <div>\r\n                <Header title=\"往期内容\" type=\"menu\"  changeDate={loadArticles}/>\r\n                <ArticleList\r\n                    loading={isFetching}\r\n                    articles={articles}\r\n                    loadArticles={() => loadArticles(date)}\r\n                    date={this.props.date} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    articles: getArticleList(state),\r\n    date: getDate(state),\r\n    isFetching: isFetching(state)\r\n});\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    actions: bindActionCreators(todayActions, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(HistoryArticle);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ArticleList from '../../components/ArticleList';\r\nimport Header from '../../components/Header';\r\nimport { getLikeList, isFetching, } from '../../redux/modules/showArticles';\r\n\r\nclass LikeArticles extends Component {\r\n    render() {\r\n        const { articles, isFetching } = this.props;\r\n        return (\r\n            <div>\r\n                <Header title=\"我的喜欢\" type=\"menu\" />\r\n                <ArticleList\r\n                    loading={isFetching}\r\n                    articles={articles}\r\n                    loadArticles={() => { }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    articles: getLikeList(state),\r\n    isFetching: isFetching(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(LikeArticles);\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ArticleList from '../../components/ArticleList';\r\nimport Header from '../../components/Header';\r\nimport { getArticleList, getColumnName, isFetching, actions as articleActions } from '../../redux/modules/showArticles';\r\n\r\nclass ColumnArticle extends Component {\r\n    componentWillMount() {\r\n        const { actions: { setColumnID },\r\n            match: { params: { columnId } } } = this.props;\r\n        setColumnID(columnId);\r\n    }\r\n    render() {\r\n        const { articles, isFetching, columnName, actions: { loadColumnArticles },\r\n            match: { params: { columnId } } } = this.props;\r\n        return (\r\n            <div>\r\n                <Header title={columnName} type=\"arrow-left\" />\r\n                <ArticleList\r\n                    loading={isFetching}\r\n                    articles={articles}\r\n                    loadArticles={() => loadColumnArticles(columnId)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    articles: getArticleList(state),\r\n    columnName: getColumnName(state),\r\n    isFetching: isFetching(state)\r\n});\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    actions: bindActionCreators(articleActions, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(ColumnArticle);","import React, { Component } from 'react';\r\n\r\n\r\nclass ArticleDetail extends Component {\r\n    componentDidMount() {\r\n        const {postId, loadArticleDetail} = this.props;\r\n        loadArticleDetail(postId);\r\n    }\r\n    render() {\r\n        const {content} = this.props;\r\n        return (\r\n            <div className=\"wrap\" dangerouslySetInnerHTML={{__html: content}} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArticleDetail;","import React, { Component } from 'react';\r\nimport { List , Avatar} from 'antd'\r\nclass CommentList extends Component {\r\n    componentDidMount() {\r\n        const {postId, loadArticleComments} = this.props;\r\n        loadArticleComments(postId);\r\n    }\r\n    render() {\r\n        const { comments } = this.props;\r\n        return (\r\n                <List\r\n                    header={`文章评论(${comments.length})`}\r\n                    dataSource={comments}\r\n                    itemLayout='horizontal'\r\n                    renderItem={item => (\r\n                        <List.Item key={item.id}>\r\n                            <List.Item.Meta\r\n                                avatar={\r\n                                    <Avatar src={item.author.avatar} size=\"default\"/>\r\n                                }\r\n                                title={<a href=\"https://ant.design\">{item.author.name}</a>}\r\n                                description={item.content}\r\n                            />\r\n                            <div>{item.created_time.split(/\\s+/)[0]}</div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentList;","export const schema = {\r\n    name: 'comments',\r\n    id: 'id'\r\n};\r\n\r\nconst reducer = (state = {}, action) => {\r\n    if (action.data && action.data[schema.name]) {\r\n        return { ...state, ...action.data[schema.name] };\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import urls from '../../utils/url';\r\nimport { FETCH_DATA } from '../middleware/api';\r\nimport { schema } from './entities/comments';\r\n\r\n//actions\r\nconst actionTypes = {\r\n    FETCH_ARTICLE_DETAIL_REQUEST: 'FETCH_ARTICLE_DETAIL_REQUEST',\r\n    FETCH_ARTICLE_DETAIL_SUCCESS: 'FETCH_ARTICLE_DETAIL_SUCCESS',\r\n    FETCH_ARTICLE_DETAIL_FAILURE: 'FETCH_ARTICLE_DETAIL_FAILURE',\r\n    FETCH_ARTICLE_COMMENTS_REQUEST: 'FETCH_ARTICLE_DETAIL_REQUEST',\r\n    FETCH_ARTICLE_COMMENTS_SUCCESS: 'FETCH_ARTICLE_COMMENTS_SUCCESS',\r\n    FETCH_ARTICLE_COMMENTS_FAILURE: 'FETCH_ARTICLE_COMMENTS_FAILURE',\r\n    CHANGE_IS_LIKE: 'CHANGE_IS_LIKE'\r\n}\r\n\r\nexport const actions = {\r\n    loadArticleDetail: postId => {\r\n        return (dispatch, getState) => {\r\n            dispatch(changeIsLike(postId));\r\n            const requestURL = urls.getArticleDetail(postId);\r\n            \r\n            return dispatch(fetchArticleDetail(requestURL));\r\n        };\r\n    },\r\n    loadArticleComments: postId => {\r\n        return (dispatch, getState) => {\r\n            const requestURL = urls.getArticleComments(postId);\r\n            return dispatch(fetchArticleComments(requestURL));\r\n        };\r\n    },\r\n    changeLikes: postId => {\r\n        return changeIsLike(postId, true);\r\n    }\r\n\r\n}\r\n\r\nconst fetchArticleDetail = requestURL => ({\r\n    [FETCH_DATA]: {\r\n        requestURL,\r\n        types: [\r\n            actionTypes.FETCH_ARTICLE_DETAIL_REQUEST,\r\n            actionTypes.FETCH_ARTICLE_DETAIL_SUCCESS,\r\n            actionTypes.FETCH_ARTICLE_DETAIL_FAILURE\r\n        ],\r\n        schema: {\r\n            name: 'content'\r\n        }\r\n    }\r\n});\r\n\r\nconst fetchArticleComments = requestURL => ({\r\n    [FETCH_DATA]: {\r\n        requestURL,\r\n        types: [\r\n            actionTypes.FETCH_ARTICLE_COMMENTS_REQUEST,\r\n            actionTypes.FETCH_ARTICLE_COMMENTS_SUCCESS,\r\n            actionTypes.FETCH_ARTICLE_COMMENTS_FAILURE\r\n        ],\r\n        schema\r\n    }\r\n});\r\n\r\nconst changeIsLike = (postId, isChange) => {\r\n    const username = localStorage.getItem('user');\r\n    let isLike = false;\r\n    if (username) {\r\n        const user = JSON.parse(localStorage.getItem(username));\r\n        isLike = user.likeIds[postId] ? true : false;\r\n\r\n        if (isChange) {\r\n            if (isLike) {\r\n                delete user.likeIds[postId];\r\n            } else {\r\n                user.likeIds[postId] = true;\r\n            }\r\n            localStorage.setItem(username, JSON.stringify(user));\r\n            isLike = !isLike;\r\n        }\r\n    }\r\n    return {\r\n        type: actionTypes.CHANGE_IS_LIKE,\r\n        isLike\r\n    };\r\n}\r\n//reducers\r\nconst initialState = {\r\n    isFetching: false,\r\n    commentIds: [],\r\n    content: '',\r\n    isLike: false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_ARTICLE_DETAIL_REQUEST:\r\n        case actionTypes.FETCH_ARTICLE_COMMENTS_REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case actionTypes.FETCH_ARTICLE_DETAIL_SUCCESS:\r\n            return { ...state, isFetching: false, content: action.data };\r\n        case actionTypes.FETCH_ARTICLE_COMMENTS_SUCCESS:\r\n            return { ...state, isFetching: false, commentIds: action.data.ids };\r\n        case actionTypes.FETCH_ARTICLE_DETAIL_FAILURE:\r\n        case actionTypes.FETCH_ARTICLE_COMMENTS_FAILURE:\r\n            return { ...state, isFetching: false };\r\n        case actionTypes.CHANGE_IS_LIKE:\r\n            return { ...state, isLike: action.isLike };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//selecor\r\nexport const getArticleDetail = state => {\r\n    return state.details.content;\r\n}\r\n\r\nexport const getArticleComments = state => {\r\n    return state.details.commentIds.map(id => state.entities.comments[id]);\r\n}\r\n\r\nexport const getIsLike = state => state.details.isLike;\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport ArticleDetail from './articleDetail';\r\nimport CommentList from './commentList';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport \"./style.css\";\r\nimport { getArticleDetail, getArticleComments, getIsLike, actions as detailActions } from '../../redux/modules/details';\r\nimport Header from '../../components/Header';\r\n\r\nclass Detail extends Component {\r\n    render() {\r\n        const { content, comments, isLike,\r\n            actions: { loadArticleDetail, loadArticleComments, changeLikes },\r\n            match: { params: { postId } } } = this.props;\r\n        return (\r\n            <div id='detail'>\r\n                <Header title=\"文章详情\" type=\"arrow-left\"\r\n                    isLike={isLike}\r\n                    changeLikes={() =>{changeLikes(postId)}}\r\n                />\r\n                <ArticleDetail content={content} loadArticleDetail={loadArticleDetail} postId={postId} />\r\n                <CommentList comments={comments} loadArticleComments={loadArticleComments} postId={postId} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    content: getArticleDetail(state),\r\n    comments: getArticleComments(state),\r\n    isLike: getIsLike(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(detailActions, dispatch),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","import React, { Component } from 'react';\r\nimport { List, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./style.css\";\r\nclass AuthorList extends Component {\r\n    componentDidMount() {\r\n        this.props.loadAuthors();\r\n    }\r\n    render() {\r\n        const { authors, header, loading } = this.props;\r\n        return (\r\n            <div>\r\n                <List\r\n                    loading={loading}\r\n                    header={header}\r\n                    dataSource={authors}\r\n                    itemLayout='horizontal'\r\n                    renderItem={item => (\r\n                        <List.Item key={item.id}>\r\n                            <Avatar src={item.avatar} size=\"large\" />\r\n                            <List.Item.Meta\r\n                                title={<Link to={`/authorProfile/${item.id}`}>{item.name}</Link>}\r\n                                description={item.editor_notes}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthorList;","export const schema = {\r\n    name: 'authors',\r\n    id: 'id'\r\n};\r\n\r\nconst reducer = (state = {}, action) => {\r\n    if (action.data && action.data[schema.name]) {\r\n        return { ...state, ...action.data[schema.name] };\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import urls from '../../utils/url';\r\nimport { FETCH_DATA } from '../middleware/api';\r\nimport { schema } from './entities/authors';\r\n\r\nconst actionTypes = {\r\n    FETCH_REC_AUTHORS_REQUEST: 'FETCH_REC_AUTHORS_REQUEST',\r\n    FETCH_REC_AUTHORS_SUCCESS: 'FETCH_REC_AUTHORS_SUCCESS',\r\n    FETCH_REC_AUTHORS_FAILURE: 'FETCH_REC_AUTHORS_FAILURE',\r\n    FETCH_HOT_AUTHORS_REQUEST: 'FETCH_HOT_AUTHORS_REQUEST',\r\n    FETCH_HOT_AUTHORS_SUCCESS: 'FETCH_HOT_AUTHORS_SUCCESS',\r\n    FETCH_HOT_AUTHORS_FAILURE: 'FETCH_HOT_AUTHORS_FAILURE',\r\n}\r\n\r\nexport const actions = {\r\n    loadRecAuthors: () => {\r\n        return (dispatch, getState) => {\r\n            const requestURL = urls.getRecAuthors();\r\n            return dispatch(fetchRecAuthors(requestURL));\r\n        }\r\n    },\r\n    loadHotAuthors: () => {\r\n        return (dispatch, getState) => {\r\n            const requestURL = urls.getHotAuthors();\r\n            return dispatch(fetchHotAuthors(requestURL));\r\n        }\r\n    },\r\n}\r\nconst fetchRecAuthors = requestURL => ({\r\n    [FETCH_DATA]: {\r\n        requestURL,\r\n        schema,\r\n        types: [\r\n            actionTypes.FETCH_REC_AUTHORS_REQUEST,\r\n            actionTypes.FETCH_REC_AUTHORS_SUCCESS,\r\n            actionTypes.FETCH_REC_AUTHORS_FAILURE,\r\n        ]\r\n    }\r\n});\r\n\r\nconst fetchHotAuthors = requestURL => ({\r\n    [FETCH_DATA]: {\r\n        requestURL,\r\n        schema,\r\n        types: [\r\n            actionTypes.FETCH_HOT_AUTHORS_REQUEST,\r\n            actionTypes.FETCH_HOT_AUTHORS_SUCCESS,\r\n            actionTypes.FETCH_HOT_AUTHORS_FAILURE,\r\n        ]\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    recIds: [],\r\n    hotIds: [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_REC_AUTHORS_REQUEST:\r\n        case actionTypes.FETCH_HOT_AUTHORS_REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case actionTypes.FETCH_REC_AUTHORS_SUCCESS:\r\n            return { ...state, isFetching: false, recIds: action.data.ids };\r\n        case actionTypes.FETCH_HOT_AUTHORS_SUCCESS:\r\n            return { ...state, isFetching: false, hotIds: action.data.ids };\r\n        case actionTypes.FETCH_REC_AUTHORS_FAILURE:\r\n        case actionTypes.FETCH_HOT_AUTHORS_FAILURE:\r\n            return { ...state, isFetching: false };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getRecAuthors = (state) => {\r\n    return state.hotAuthors.recIds.map(id => state.entities.authors[id]);\r\n}\r\nexport const getHotAuthors = (state) => {\r\n    return state.hotAuthors.hotIds.map(id => state.entities.authors[id]);\r\n}\r\nexport const isFetching = state => state.hotAuthors.isFetching\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport AuthorList from './AuthorList';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getHotAuthors, getRecAuthors, isFetching, actions as authorActions } from '../../redux/modules/hotAuthors';\r\nimport Header from '../../components/Header';\r\n\r\nclass HotAuthor extends Component {\r\n    render() {\r\n        const { recAuthors, hotAuthors,isFetching, actions: { loadRecAuthors, loadHotAuthors } } = this.props;\r\n        return (\r\n            <div id='hotAuthor'>\r\n                <Header title=\"热门作者\" type=\"menu\" />\r\n                <AuthorList loading ={isFetching} authors={recAuthors} loadAuthors={loadRecAuthors} header=\"本周推荐\" />\r\n                <AuthorList loading ={isFetching} authors={hotAuthors} loadAuthors={loadHotAuthors} header=\"热门作者\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    recAuthors: getRecAuthors(state),\r\n    hotAuthors: getHotAuthors(state),\r\n    isFetching: isFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(authorActions, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HotAuthor);","import React, { Component } from 'react';\r\nimport { Avatar } from 'antd';\r\n\r\nclass AuthorInfo extends Component {\r\n    render() {\r\n        const { author } = this.props;\r\n        return (\r\n            <div>\r\n                <div id='profile-panel'>\r\n                    <Avatar src={author.large_avatar} shape='circle' icon='user' size='large'/>\r\n                    <p>{author.name}</p>\r\n                    <p>签名：{author.alt}</p>\r\n                </div>\r\n                <p id=\"resume\">简介：{author.resume}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthorInfo;","import React, { Component } from 'react';\r\nimport { List, Icon } from 'antd';\r\n\r\nclass AuthorPosts extends Component {\r\n    componentDidMount() {\r\n        this.props.loadAuthorPosts();\r\n    }\r\n    render() {\r\n        const { posts } = this.props;\r\n        return (\r\n            <div>\r\n                <List\r\n                    header={<div>发表的文章</div>}\r\n                    dataSource={posts}\r\n                    itemLayout='horizontal'\r\n                    renderItem={item => (\r\n                        <List.Item key={item.id}>\r\n                            <List.Item.Meta\r\n                                title={item.title}\r\n                            />\r\n                            <div><Icon type='heart'/>&nbsp;{item.like_count}</div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthorPosts;","import urls from '../../utils/url';\r\nimport { FETCH_DATA } from '../middleware/api';\r\nimport { schema } from './entities/articles';\r\n\r\nconst actionTypes = {\r\n    FETCH_AUTHOR_POSTS_REQUEST: 'FETCH_AUTHOR_POSTS_REQUEST',\r\n    FETCH_AUTHOR_POSTS_SUCCESS: 'FETCH_AUTHOR_POSTS_SUCCESS',\r\n    FETCH_AUTHOR_POSTS_FAILURE: 'FETCH_AUTHOR_POSTS_FAILURE',\r\n    SET_AUTHORID: 'SET_AUTHORID'\r\n}\r\n\r\nexport const actions = {\r\n    setAuthorID : (authorId) => ({ type: actionTypes.SET_AUTHORID, authorId }),\r\n    loadAuthorPosts: () => {\r\n        return (dispatch, getState) => {\r\n            const requestURL = urls.getAuthorPosts(getState().authorInfo.authorId);\r\n            return dispatch(fetchAuthorPosts(requestURL));\r\n        }\r\n    },\r\n}\r\nconst fetchAuthorPosts = requestURL => ({\r\n    [FETCH_DATA]: {\r\n        requestURL,\r\n        schema,\r\n        types: [\r\n            actionTypes.FETCH_AUTHOR_POSTS_REQUEST,\r\n            actionTypes.FETCH_AUTHOR_POSTS_SUCCESS,\r\n            actionTypes.FETCH_AUTHOR_POSTS_FAILURE,\r\n        ]\r\n    }\r\n});\r\n\r\n\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    postIds: [],\r\n    authorId: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_AUTHOR_POSTS_REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case actionTypes.FETCH_AUTHOR_POSTS_SUCCESS:\r\n            return { ...state, isFetching: false, postIds: action.data.ids };\r\n        case actionTypes.FETCH_AUTHOR_POSTS_FAILURE:\r\n            return { ...state, isFetching: false };\r\n        case actionTypes.SET_AUTHORID:{\r\n            return { ...state, authorId: action.authorId };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getAuthorPosts = (state) => {\r\n    return state.authorInfo.postIds.map(id => state.entities.articles[id]);\r\n}\r\nexport const getAuthorInfo = (state) => {\r\n    return state.entities.authors[state.authorInfo.authorId]\r\n}\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport AuthorInfo from './authorInfo';\r\nimport AuthorPosts from './authorPosts';\r\nimport Header from '../../components/Header';\r\nimport './style.css';\r\nimport { getAuthorInfo, getAuthorPosts, actions as authorActions } from '../../redux/modules/authorInfo';\r\n\r\nclass AuthorProfile extends Component {\r\n\r\n    componentWillMount() {\r\n        const { actions: { setAuthorID }, match: { params: { authorId } } } = this.props;\r\n        setAuthorID(authorId);\r\n    }\r\n    render() {\r\n        const { authorInfo, authorPosts,\r\n            actions: { loadAuthorPosts } } = this.props;\r\n\r\n        return (\r\n            <div id='authorProfile'>\r\n                <Header title=\"作者详情\" type=\"arrow-left\" />\r\n                {authorInfo ? <AuthorInfo author={authorInfo} /> : ''}\r\n                <AuthorPosts posts={authorPosts} loadAuthorPosts={loadAuthorPosts} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    authorInfo: getAuthorInfo(state),\r\n    authorPosts: getAuthorPosts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(authorActions, dispatch),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorProfile)\r\n","const actionTypes = {\r\n    LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n    LOGOUT: 'LOGOUT'\r\n}\r\nconst userSchema = {\r\n    username: '',\r\n    password: '',\r\n    likeIds: {}\r\n}\r\nexport const actions = {\r\n    login: (username, password) => {\r\n        return (dispatch, getState) => {\r\n            dispatch({ type: actionTypes.LOGIN_REQUEST });\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                    if (!localStorage.getItem(username)) {\r\n                        userSchema.username = username;\r\n                        userSchema.password = password;\r\n                        localStorage.setItem(username, JSON.stringify(userSchema));\r\n                    }\r\n                    localStorage.setItem('user', username);\r\n                    localStorage.setItem('isLogin', true);\r\n                    dispatch({type: actionTypes.LOGIN_SUCCESS});\r\n                    resolve();\r\n                }, 1000);\r\n            })\r\n        }\r\n    },\r\n\r\n    logout: () => {\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('isLogin');\r\n        return {\r\n            type: actionTypes.LOGOUT\r\n        }\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    isLogin: localStorage.getItem('isLogin') || false,\r\n    username: localStorage.getItem('user') || '',\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return { ...state, isLogin: true, isFetching: false };\r\n        case actionTypes.LOGIN_FAILURE:\r\n            return { ...state, isFetching: false };\r\n        case actionTypes.LOGOUT:\r\n            return { ...state, isLogin: false, username: '' };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const isLogin = state => state.login.isLogin;\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport { Form, Input, Icon, Button } from 'antd';\r\n\r\nclass loginForm extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const username = document.getElementById('username').value;\r\n        const password = document.getElementById('password').value;\r\n        this.props.onSubmit(username, password);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} style={{ textAlign: 'center', margin: '10%' }}>\r\n                <Form.Item>\r\n                    <Input id=\"username\"\r\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        placeholder=\"Username\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n\r\n                    <Input\r\n                        id=\"password\"\r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" style={{ width: '100%', backgroundColor: '#21BBA6' }}>\r\n                        登录\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default loginForm;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { isLogin, actions as loginActions } from '../../redux/modules/login'\r\nimport LoginForm from './loginForm';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from '../../components/Header';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    render() {\r\n        const { isLogin, actions: { login }, location: { state } } = this.props;\r\n        if (isLogin) {\r\n            if (state && state.from) {\r\n                return <Redirect to={state.from} />;\r\n            }\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div>\r\n                <Header title=\"用户登录\" type=\"arrow-left\"\r\n                />\r\n                <LoginForm onSubmit={login} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isLogin: isLogin(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(loginActions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from '../../redux/modules/login';\r\n\r\nclass PrivateRoute extends Component {\r\n    render() {\r\n        const { component: Component, isLogin, ...rest} = this.props;\r\n        return (\r\n            <Route \r\n             {...rest}\r\n             render={props =>{\r\n                return isLogin ? \r\n                    <Component {...props}/> :\r\n                    <Redirect to={{\r\n                        pathname:'/login',\r\n                        state: {from: props.location}\r\n                    }}/>\r\n             }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLogin: isLogin(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(PrivateRoute);","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Column from '../Column';\r\nimport TodayArticle from '../Article/todayArticles';\r\nimport HistoryArticle from '../Article/historyArticles';\r\nimport LikeArticles from '../Article/likeArticles';\r\nimport ColumnArticle from '../Article/columnArticles';\r\nimport Detail from '../Detail';\r\nimport HotAuthor from '../HotAuthor';\r\nimport AuthorProfile from '../AuthorProfile';\r\nimport Login from '../Login';\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport './style.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/column\" component={Column} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/historyArticles\" component={HistoryArticle} />\r\n          <Route path=\"/columnArticle/:columnId\" component={ColumnArticle} />\r\n          <Route path=\"/artileDetail/:postId\" component={Detail} />\r\n          <Route path=\"/hotAuthors\" component={HotAuthor} />\r\n          <Route path=\"/authorProfile/:authorId\" component={AuthorProfile} />\r\n          <PrivateRoute path=\"/like\" component={LikeArticles} />\r\n          <Route path=\"/\" component={TodayArticle} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport comments from './comments';\r\nimport articles from './articles'\r\nimport columns from './columns'\r\nimport authors from './authors';\r\n\r\nconst rootReducer = combineReducers({\r\n    articles,\r\n    columns,\r\n    comments,\r\n    authors,\r\n})\r\n\r\nexport default  rootReducer;","import { combineReducers } from 'redux';\r\nimport entities from './entities';\r\nimport details from './details';\r\nimport showArticles from './showArticles';\r\nimport showColumns from './showColumns';\r\nimport hotAuthors from \"./hotAuthors\";\r\nimport login from './login';\r\nimport authorInfo from './authorInfo';\r\n\r\nconst rootReducer = combineReducers({\r\n    entities,\r\n    showArticles,\r\n    showColumns,\r\n    hotAuthors,\r\n    details,\r\n    login,\r\n    authorInfo\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './modules';\r\nimport api from '../redux/middleware/api';\r\n\r\nlet store;\r\nif (process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n    store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, api)));\r\n} else {\r\n    store = createStore(rootReducer, applyMiddleware(thunk, api));\r\n}\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './containers/App/index';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}